{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/Navbar/Navbar.tsx","pages/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonDetails/PersonDetails.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","content","className","isActive","cn","Navbar","role","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","name","sex","PersonDetails","isSelected","people","motherName","fatherName","born","died","motherFound","find","p","motherNameCell","fatherFound","fatherNameCell","PeopleTable","selectedSlug","map","PeoplePage","useState","setPeople","isError","setIsError","isLoading","setIsLoading","useParams","peopleData","useEffect","fetchPeople","dataFromServer","length","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.af5a1b99.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  content: string;\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, content }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => cn(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {content}\n  </NavLink>\n);\n","import { PageNavLink } from '../PageNavLink';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" content=\"Home\" />\n          <PageNavLink to=\"/people\" content=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => {\n  return <h1 className=\"title\">Home Page</h1>;\n};\n","import { Person } from './types/Person';\r\n\r\n// eslint-disable-next-line max-len\r\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\r\n\r\nfunction wait(delay: number) {\r\n  return new Promise(resolve => setTimeout(resolve, delay));\r\n}\r\n\r\nexport function getPeople(): Promise<Person[]> {\r\n  // keep this delay for testing purpose\r\n  return wait(500)\r\n    .then(() => fetch(API_URL))\r\n    .then(response => response.json());\r\n}\r\n","import './Loader.scss';\r\n\r\nexport const Loader = () => (\r\n  <div className=\"Loader\" data-cy=\"loader\">\r\n    <div className=\"Loader__content\" />\r\n  </div>\r\n);\r\n","import React from 'react';\nimport cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { slug, name, sex } = person;\n\n  return (\n    <NavLink to={`/people/${slug}`} className={cn({ 'has-text-danger': sex === 'f' })}>\n      {name}\n    </NavLink>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  person: Person;\n  isSelected: (person: Person) => boolean;\n  people: Person[];\n};\n\nexport const PersonDetails: React.FC<Props> = ({\n  person,\n  isSelected,\n  people,\n}) => {\n  const {\n    motherName,\n    fatherName,\n    sex,\n    born,\n    died,\n  } = person;\n  const motherFound = people.find(p => p.name === motherName);\n  const motherNameCell = motherName || '-';\n  const fatherFound = people.find(p => p.name === fatherName);\n  const fatherNameCell = fatherName || '-';\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({ 'has-background-warning': isSelected(person) })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        { motherFound\n          ? <PersonLink person={motherFound} />\n          : motherNameCell}\n      </td>\n      <td>\n        {fatherFound\n          ? <PersonLink person={fatherFound} />\n          : fatherNameCell}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../../types';\nimport { PersonDetails } from '../PersonDetails';\n\ntype Props = {\n  people: Person[];\n  selectedSlug: string;\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, selectedSlug }) => {\n  const isSelected = (person: Person) => person.slug === selectedSlug;\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonDetails\n            people={people}\n            person={person}\n            key={person.name}\n            isSelected={isSelected}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getPeople } from '../api';\n\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\n\nimport { Person } from '../types';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const { slug = '' } = useParams();\n\n  async function fetchPeople() {\n    setIsError(false);\n    try {\n      setIsLoading(true);\n      const peopleData = await getPeople();\n\n      setPeople(peopleData);\n      setIsLoading(false);\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    fetchPeople();\n  }, []);\n\n  const dataFromServer = (people.length > 0)\n    ? <PeopleTable people={people} selectedSlug={slug} />\n    : (\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        </div>\n      </div>\n    );\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      {(isLoading)\n        ? <Loader />\n        : dataFromServer}\n      {isError && (\n        <div className=\"block\">\n          <div className=\"box table-container\">\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\n\nimport { Navbar } from './components/Navbar';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nimport './App.scss';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<HomePage />}\n          />\n\n          <Route\n            path=\"/home\"\n            element={<Navigate to=\"/\" replace />}\n          />\n\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route\n            path=\"/people\"\n            element={<PeoplePage />}\n          />\n\n          <Route\n            path=\"*\"\n            element={<h1 className=\"title\">Page not found</h1>}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\n\r\nimport 'bulma/css/bulma.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\n\r\nimport { App } from './App';\r\n\r\ncreateRoot(document.getElementById('root') as HTMLDivElement)\r\n  .render(\r\n    <Router>\r\n      <App />\r\n    </Router>,\r\n  );\r\n"],"sourceRoot":""}